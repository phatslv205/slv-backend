"""add messages field to User

Revision ID: 6810e4303252
Revises: 4beb809083e7
Create Date: 2025-06-09 01:53:48.909201

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6810e4303252'
down_revision = '4beb809083e7'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('messages', sa.PickleType(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('messages')

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('fullname', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bio', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('school', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('birthday', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('vip_gpt', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('solves', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_solve_date', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('ads_used_today', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('vip_until_gpt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('vip_until_solver_edu', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('vip_until_lite', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('vip_gpt_ai', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('vip_solver_edu', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('vip_ai_lite', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('lite_usage', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lite_date', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('last_lite_free_date', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('privacy', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('user_id', name=op.f('user_user_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name=op.f('user_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
